plugins {
    id 'java'
    id 'eclipse'
    id 'maven'
    id 'jacoco'
    id 'com.github.johnrengelman.shadow' version '4.0.4'
    id 'org.sonarqube' version '2.7'
    id 'io.freefair.lombok' version '5.3.0'
}

group = 'com.iexec.common'
sourceCompatibility = 11
targetCompatibility = 11

repositories {
    mavenCentral()
    jcenter()
    maven {
        url "https://jitpack.io"
    }
}

configurations {
    deployerJars
}

dependencies {
    // web3j dependency
    compile "org.web3j:core:4.8.7"
    
    // apache commons.lang3
    compile "org.apache.commons:commons-lang3:3.9"

    // multiaddresses (IPFS)
    compile 'com.github.multiformats:java-multiaddr:1.3.1'

    //jaxb required with Java 11
    compile 'javax.xml.bind:jaxb-api:2.3.0'

    //args utils
    compile 'org.apache.maven.shared:maven-shared-utils:3.2.1'

    // zip
    compile 'net.lingala.zip4j:zip4j:2.3.1'

    // google core libs
    implementation "com.google.guava:guava:28.2-jre"

    // json
    implementation 'org.json:json:20201115'

    implementation 'ch.qos.logback:logback-classic:1.2.3'
    implementation 'io.github.openfeign:feign-okhttp:11.0'
    implementation 'io.github.openfeign:feign-jackson:11.0'
    implementation 'io.github.openfeign:feign-slf4j:11.0'

    // docker
    implementation 'com.github.docker-java:docker-java:3.2.5'
    implementation 'com.github.docker-java:docker-java-transport-httpclient5:3.2.5'

    // test
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.6.0'
    testImplementation 'org.mockito:mockito-core:3.6.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:3.6.0'
    testImplementation 'org.assertj:assertj-core:3.18.1'

    // package cloud
    deployerJars "io.packagecloud.maven.wagon:maven-packagecloud-wagon:0.0.6"
}

ext {
    // ./gradlew build -Pdev
    isDev = project.hasProperty('dev')
    gitBranch = 'git name-rev --name-only HEAD'.execute().text.trim()
    isMasterBranch = gitBranch == "master"
    isDevelopBranch = gitBranch == "develop"
    canUploadArchives = isMasterBranch || isDevelopBranch
    isSnapshotVersion = project.version.contains("SNAPSHOT")
}

test {
    useJUnitPlatform {
        if (isDev) {
            excludeTags 'slow'
        }
    }
    reports {
        junitXml.enabled = true
        html.enabled = true
    }
}

jacoco {
    toolVersion = "0.8.3"
}
build.dependsOn jacocoTestReport

jar {
    // include source code in the jar
    from sourceSets.main.allSource
}

shadowJar { //required if we want to embed web3j dependency inside
    baseName = rootProject.name
    from sourceSets.main.allSource
    version = version
}
build.dependsOn(shadowJar)

project.ext.getNexusMaven = {
    def nexusMavenBase = "https://nexus.iex.ec/repository"
    if (isSnapshotVersion) {
        return nexusMavenBase + "/maven-snapshots/"
    } else {
        return nexusMavenBase + "/maven-releases/"
    }
}

uploadArchives {
    repositories.mavenDeployer {
        configuration = configurations.deployerJars
        repository(url: getNexusMaven()) {
            authentication(userName: nexusUser, password: nexusPassword)
        }
    }
}

uploadArchives.enabled = canUploadArchives